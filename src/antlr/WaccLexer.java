// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IS=1, CALL=2, SKIP=3, READ=4, FREE=5, RETURN=6, EXIT=7, PRINT=8, PRINTLN=9, 
		IF=10, THEN=11, ELSE=12, FI=13, WHILE=14, DO=15, DONE=16, BEGIN=17, END=18, 
		NOT=19, LENGTH=20, ORD=21, CHR=22, ASSIGN=23, MULTIPLY=24, DIVIDE=25, 
		MOD=26, PLUS=27, MINUS=28, GREATER_THAN=29, LESS_THAN=30, GREATER_THAN_OR_EQUAL=31, 
		LESS_THAN_OR_EQUAL=32, EQUAL=33, NOT_EQUAL=34, AND=35, OR=36, INT=37, 
		BOOL=38, CHAR=39, STRING=40, PAIR=41, NEWPAIR=42, FIRST=43, SECOND=44, 
		NULL=45, OPEN_PARENTHESES=46, CLOSE_PARENTHESES=47, OPEN_SQUARE_BRACKET=48, 
		CLOSE_SQUARE_BRACKET=49, SEMI_COLON=50, COMMA=51, TRUE=52, FALSE=53, IDENTIFIER=54, 
		COMMENT=55, WHITESPACE=56, INTEGER=57, CHARACTER_LITERAL=58, STRING_LITERAL=59;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'"
	};
	public static final String[] ruleNames = {
		"IS", "CALL", "SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", 
		"IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", "BEGIN", "END", "NOT", 
		"LENGTH", "ORD", "CHR", "ASSIGN", "MULTIPLY", "DIVIDE", "MOD", "PLUS", 
		"MINUS", "GREATER_THAN", "LESS_THAN", "GREATER_THAN_OR_EQUAL", "LESS_THAN_OR_EQUAL", 
		"EQUAL", "NOT_EQUAL", "AND", "OR", "INT", "BOOL", "CHAR", "STRING", "PAIR", 
		"NEWPAIR", "FIRST", "SECOND", "NULL", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", 
		"OPEN_SQUARE_BRACKET", "CLOSE_SQUARE_BRACKET", "SEMI_COLON", "COMMA", 
		"TRUE", "FALSE", "IDENTIFIER", "COMMENT", "WHITESPACE", "SINGLE_QUOTE", 
		"DOUBLE_QUOTE", "BACKSLASH", "ESCAPE_CHAR", "CHARACTER", "INTEGER", "CHARACTER_LITERAL", 
		"STRING_LITERAL"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u0190\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7"+
		"\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37"+
		"\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3&"+
		"\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3"+
		"*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3"+
		"/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\65"+
		"\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\7\67\u0155\n\67\f\67\16"+
		"\67\u0158\13\67\38\38\78\u015c\n8\f8\168\u015f\138\38\38\38\38\39\39\3"+
		"9\39\3:\3:\3;\3;\3<\3<\3=\3=\3=\3=\5=\u0173\n=\3>\3>\3>\3>\5>\u0179\n"+
		">\3?\3?\5?\u017d\n?\3?\6?\u0180\n?\r?\16?\u0181\3@\3@\3@\3@\3A\3A\7A\u018a"+
		"\nA\fA\16A\u018d\13A\3A\3A\2\2B\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62c\63e\64g\65i\66k\67m8o9q:s\2u\2w\2y\2{\2};\177<\u0081=\3\2\t"+
		"\5\2C\\aac|\6\2\62;C\\aac|\4\2\f\f\17\17\5\2\13\f\17\17\"\"\b\2\62\62"+
		"ddhhppttvv\5\2$$))^^\3\2\62;\u0194\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2}\3\2\2\2\2"+
		"\177\3\2\2\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u0086\3\2\2\2\7\u008b\3"+
		"\2\2\2\t\u0090\3\2\2\2\13\u0095\3\2\2\2\r\u009a\3\2\2\2\17\u00a1\3\2\2"+
		"\2\21\u00a6\3\2\2\2\23\u00ac\3\2\2\2\25\u00b4\3\2\2\2\27\u00b7\3\2\2\2"+
		"\31\u00bc\3\2\2\2\33\u00c1\3\2\2\2\35\u00c4\3\2\2\2\37\u00ca\3\2\2\2!"+
		"\u00cd\3\2\2\2#\u00d2\3\2\2\2%\u00d8\3\2\2\2\'\u00dc\3\2\2\2)\u00de\3"+
		"\2\2\2+\u00e2\3\2\2\2-\u00e6\3\2\2\2/\u00ea\3\2\2\2\61\u00ec\3\2\2\2\63"+
		"\u00ee\3\2\2\2\65\u00f0\3\2\2\2\67\u00f2\3\2\2\29\u00f4\3\2\2\2;\u00f6"+
		"\3\2\2\2=\u00f8\3\2\2\2?\u00fa\3\2\2\2A\u00fd\3\2\2\2C\u0100\3\2\2\2E"+
		"\u0103\3\2\2\2G\u0106\3\2\2\2I\u0109\3\2\2\2K\u010c\3\2\2\2M\u0110\3\2"+
		"\2\2O\u0115\3\2\2\2Q\u011a\3\2\2\2S\u0121\3\2\2\2U\u0126\3\2\2\2W\u012e"+
		"\3\2\2\2Y\u0132\3\2\2\2[\u0136\3\2\2\2]\u013b\3\2\2\2_\u013d\3\2\2\2a"+
		"\u013f\3\2\2\2c\u0141\3\2\2\2e\u0143\3\2\2\2g\u0145\3\2\2\2i\u0147\3\2"+
		"\2\2k\u014c\3\2\2\2m\u0152\3\2\2\2o\u0159\3\2\2\2q\u0164\3\2\2\2s\u0168"+
		"\3\2\2\2u\u016a\3\2\2\2w\u016c\3\2\2\2y\u0172\3\2\2\2{\u0178\3\2\2\2}"+
		"\u017c\3\2\2\2\177\u0183\3\2\2\2\u0081\u0187\3\2\2\2\u0083\u0084\7k\2"+
		"\2\u0084\u0085\7u\2\2\u0085\4\3\2\2\2\u0086\u0087\7e\2\2\u0087\u0088\7"+
		"c\2\2\u0088\u0089\7n\2\2\u0089\u008a\7n\2\2\u008a\6\3\2\2\2\u008b\u008c"+
		"\7u\2\2\u008c\u008d\7m\2\2\u008d\u008e\7k\2\2\u008e\u008f\7r\2\2\u008f"+
		"\b\3\2\2\2\u0090\u0091\7t\2\2\u0091\u0092\7g\2\2\u0092\u0093\7c\2\2\u0093"+
		"\u0094\7f\2\2\u0094\n\3\2\2\2\u0095\u0096\7h\2\2\u0096\u0097\7t\2\2\u0097"+
		"\u0098\7g\2\2\u0098\u0099\7g\2\2\u0099\f\3\2\2\2\u009a\u009b\7t\2\2\u009b"+
		"\u009c\7g\2\2\u009c\u009d\7v\2\2\u009d\u009e\7w\2\2\u009e\u009f\7t\2\2"+
		"\u009f\u00a0\7p\2\2\u00a0\16\3\2\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3\7"+
		"z\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7v\2\2\u00a5\20\3\2\2\2\u00a6\u00a7"+
		"\7r\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7k\2\2\u00a9\u00aa\7p\2\2\u00aa"+
		"\u00ab\7v\2\2\u00ab\22\3\2\2\2\u00ac\u00ad\7r\2\2\u00ad\u00ae\7t\2\2\u00ae"+
		"\u00af\7k\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7n\2\2"+
		"\u00b2\u00b3\7p\2\2\u00b3\24\3\2\2\2\u00b4\u00b5\7k\2\2\u00b5\u00b6\7"+
		"h\2\2\u00b6\26\3\2\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7j\2\2\u00b9\u00ba"+
		"\7g\2\2\u00ba\u00bb\7p\2\2\u00bb\30\3\2\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be"+
		"\7n\2\2\u00be\u00bf\7u\2\2\u00bf\u00c0\7g\2\2\u00c0\32\3\2\2\2\u00c1\u00c2"+
		"\7h\2\2\u00c2\u00c3\7k\2\2\u00c3\34\3\2\2\2\u00c4\u00c5\7y\2\2\u00c5\u00c6"+
		"\7j\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9\7g\2\2\u00c9"+
		"\36\3\2\2\2\u00ca\u00cb\7f\2\2\u00cb\u00cc\7q\2\2\u00cc \3\2\2\2\u00cd"+
		"\u00ce\7f\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7g\2\2"+
		"\u00d1\"\3\2\2\2\u00d2\u00d3\7d\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7i"+
		"\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7p\2\2\u00d7$\3\2\2\2\u00d8\u00d9"+
		"\7g\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7f\2\2\u00db&\3\2\2\2\u00dc\u00dd"+
		"\7#\2\2\u00dd(\3\2\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1"+
		"\7p\2\2\u00e1*\3\2\2\2\u00e2\u00e3\7q\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5"+
		"\7f\2\2\u00e5,\3\2\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8\7j\2\2\u00e8\u00e9"+
		"\7t\2\2\u00e9.\3\2\2\2\u00ea\u00eb\7?\2\2\u00eb\60\3\2\2\2\u00ec\u00ed"+
		"\7,\2\2\u00ed\62\3\2\2\2\u00ee\u00ef\7\61\2\2\u00ef\64\3\2\2\2\u00f0\u00f1"+
		"\7\'\2\2\u00f1\66\3\2\2\2\u00f2\u00f3\7-\2\2\u00f38\3\2\2\2\u00f4\u00f5"+
		"\7/\2\2\u00f5:\3\2\2\2\u00f6\u00f7\7@\2\2\u00f7<\3\2\2\2\u00f8\u00f9\7"+
		">\2\2\u00f9>\3\2\2\2\u00fa\u00fb\7@\2\2\u00fb\u00fc\7?\2\2\u00fc@\3\2"+
		"\2\2\u00fd\u00fe\7>\2\2\u00fe\u00ff\7?\2\2\u00ffB\3\2\2\2\u0100\u0101"+
		"\7?\2\2\u0101\u0102\7?\2\2\u0102D\3\2\2\2\u0103\u0104\7#\2\2\u0104\u0105"+
		"\7?\2\2\u0105F\3\2\2\2\u0106\u0107\7(\2\2\u0107\u0108\7(\2\2\u0108H\3"+
		"\2\2\2\u0109\u010a\7~\2\2\u010a\u010b\7~\2\2\u010bJ\3\2\2\2\u010c\u010d"+
		"\7k\2\2\u010d\u010e\7p\2\2\u010e\u010f\7v\2\2\u010fL\3\2\2\2\u0110\u0111"+
		"\7d\2\2\u0111\u0112\7q\2\2\u0112\u0113\7q\2\2\u0113\u0114\7n\2\2\u0114"+
		"N\3\2\2\2\u0115\u0116\7e\2\2\u0116\u0117\7j\2\2\u0117\u0118\7c\2\2\u0118"+
		"\u0119\7t\2\2\u0119P\3\2\2\2\u011a\u011b\7u\2\2\u011b\u011c\7v\2\2\u011c"+
		"\u011d\7t\2\2\u011d\u011e\7k\2\2\u011e\u011f\7p\2\2\u011f\u0120\7i\2\2"+
		"\u0120R\3\2\2\2\u0121\u0122\7r\2\2\u0122\u0123\7c\2\2\u0123\u0124\7k\2"+
		"\2\u0124\u0125\7t\2\2\u0125T\3\2\2\2\u0126\u0127\7p\2\2\u0127\u0128\7"+
		"g\2\2\u0128\u0129\7y\2\2\u0129\u012a\7r\2\2\u012a\u012b\7c\2\2\u012b\u012c"+
		"\7k\2\2\u012c\u012d\7t\2\2\u012dV\3\2\2\2\u012e\u012f\7h\2\2\u012f\u0130"+
		"\7u\2\2\u0130\u0131\7v\2\2\u0131X\3\2\2\2\u0132\u0133\7u\2\2\u0133\u0134"+
		"\7p\2\2\u0134\u0135\7f\2\2\u0135Z\3\2\2\2\u0136\u0137\7p\2\2\u0137\u0138"+
		"\7w\2\2\u0138\u0139\7n\2\2\u0139\u013a\7n\2\2\u013a\\\3\2\2\2\u013b\u013c"+
		"\7*\2\2\u013c^\3\2\2\2\u013d\u013e\7+\2\2\u013e`\3\2\2\2\u013f\u0140\7"+
		"]\2\2\u0140b\3\2\2\2\u0141\u0142\7_\2\2\u0142d\3\2\2\2\u0143\u0144\7="+
		"\2\2\u0144f\3\2\2\2\u0145\u0146\7.\2\2\u0146h\3\2\2\2\u0147\u0148\7v\2"+
		"\2\u0148\u0149\7t\2\2\u0149\u014a\7w\2\2\u014a\u014b\7g\2\2\u014bj\3\2"+
		"\2\2\u014c\u014d\7h\2\2\u014d\u014e\7c\2\2\u014e\u014f\7n\2\2\u014f\u0150"+
		"\7u\2\2\u0150\u0151\7g\2\2\u0151l\3\2\2\2\u0152\u0156\t\2\2\2\u0153\u0155"+
		"\t\3\2\2\u0154\u0153\3\2\2\2\u0155\u0158\3\2\2\2\u0156\u0154\3\2\2\2\u0156"+
		"\u0157\3\2\2\2\u0157n\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015d\7%\2\2\u015a"+
		"\u015c\n\4\2\2\u015b\u015a\3\2\2\2\u015c\u015f\3\2\2\2\u015d\u015b\3\2"+
		"\2\2\u015d\u015e\3\2\2\2\u015e\u0160\3\2\2\2\u015f\u015d\3\2\2\2\u0160"+
		"\u0161\t\4\2\2\u0161\u0162\3\2\2\2\u0162\u0163\b8\2\2\u0163p\3\2\2\2\u0164"+
		"\u0165\t\5\2\2\u0165\u0166\3\2\2\2\u0166\u0167\b9\2\2\u0167r\3\2\2\2\u0168"+
		"\u0169\7)\2\2\u0169t\3\2\2\2\u016a\u016b\7$\2\2\u016bv\3\2\2\2\u016c\u016d"+
		"\7^\2\2\u016dx\3\2\2\2\u016e\u0173\t\6\2\2\u016f\u0173\5s:\2\u0170\u0173"+
		"\5u;\2\u0171\u0173\5w<\2\u0172\u016e\3\2\2\2\u0172\u016f\3\2\2\2\u0172"+
		"\u0170\3\2\2\2\u0172\u0171\3\2\2\2\u0173z\3\2\2\2\u0174\u0179\n\7\2\2"+
		"\u0175\u0176\5w<\2\u0176\u0177\5y=\2\u0177\u0179\3\2\2\2\u0178\u0174\3"+
		"\2\2\2\u0178\u0175\3\2\2\2\u0179|\3\2\2\2\u017a\u017d\5\67\34\2\u017b"+
		"\u017d\59\35\2\u017c\u017a\3\2\2\2\u017c\u017b\3\2\2\2\u017c\u017d\3\2"+
		"\2\2\u017d\u017f\3\2\2\2\u017e\u0180\t\b\2\2\u017f\u017e\3\2\2\2\u0180"+
		"\u0181\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182~\3\2\2\2"+
		"\u0183\u0184\5s:\2\u0184\u0185\5{>\2\u0185\u0186\5s:\2\u0186\u0080\3\2"+
		"\2\2\u0187\u018b\5u;\2\u0188\u018a\5{>\2\u0189\u0188\3\2\2\2\u018a\u018d"+
		"\3\2\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018e\3\2\2\2\u018d"+
		"\u018b\3\2\2\2\u018e\u018f\5u;\2\u018f\u0082\3\2\2\2\n\2\u0156\u015d\u0172"+
		"\u0178\u017c\u0181\u018b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}